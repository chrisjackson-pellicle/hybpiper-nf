/////////////////////////////////////////////////////////////////////////////
//////  Nextflow config file for 'hybpiper-rbgv-pipeline.nf' pipeline  //////
/////////////////////////////////////////////////////////////////////////////

nextflow.enable.dsl=2

// set some defaults for pipeline parameters
params {
    help = false
    targetfile_aa = false
    targetfile_dna = false
    outdir = 'results'
    illumina_reads_directory = false
    target_file = false
    no_stitched_contigs = false
    bbmap_subfilter = 7
    chimeric_stitched_contig_edit_distance = 5
    chimeric_stitched_contig_discordant_reads_cutoff = 5
    merged = false
    paired_and_single = false
    single_end = false
    read_pairs_pattern = 'R1,R2'
    single_pattern = 'single'
    use_blastx = false
    num_forks = false
    memory = 1
    translate_target_file_for_blastx = false
    blastx_evalue = 1e-4
    paralog_warning_min_len_percent = 0.75
    cov_cutoff = 8
    use_trimmomatic = false
    trimmomatic_leading_quality = 3
    trimmomatic_trailing_quality = 3
    trimmomatic_min_length = 36
    trimmomatic_sliding_window_size = 4
    trimmomatic_sliding_window_quality = 20
    run_intronerate = false
    combine_read_files = false
    combine_read_files_num_fields = 1
    namelist = false
}

// enable HTML execution report by default, written to 'assembly.html'
report {
    enabled = true
    file = 'assembly.html'
}

// enable HTML timeline report by default, written to 'timeline.html'
timeline {
    enabled = true
    file = 'timeline.html'
}

/* 
enable .dot direct acyclic graph (DAG) report by default, written to 'dag.dot'. If
graphviz is installed this can be converted to e.g. png with the command: 
dot dag.dot -Tpng -o dag.png
*/
dag {
    enabled = true
    file = 'dag.dot'
}

// enable execution tracing file by default, written to 'pipeline_trace.txt'
trace {
    enabled = true
    file = 'pipeline_trace.txt'
    fields = 'task_id,name,status,exit,realtime,%cpu,rss,container'
}


/* 
set up profiles. Here I've made profiles for using SLURM, and also a 'standard' 
profile (default)
*/
profiles {

    gadi {
        process { 

            withName: ASSEMBLE_PAIRED_AND_SINGLE_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: ASSEMBLE_PAIRED_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: ASSEMBLE_SINGLE_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: VISUALISE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: SUMMARY_STATS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: INTRONERATE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: PARALOGS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries =
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: RETRIEVE_SEQUENCES {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: PARALOG_RETRIEVER {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: COMBINE_LANES_PAIRED_END {
                cpus = { 1 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: COMBINE_LANES_SINGLE_END {
                cpus = { 1 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: TRIMMOMATIC_PAIRED {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withName: TRIMMOMATIC_SINGLE {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141   ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31"
                module = 'singularity'
            }
            withLabel: in_container {
                container = \
                'file:///g/data/nm31/bin/hybpiper-rbgv_latest.sif'
                }
        }
        executor {
            name = 'pbspronci'
        }
        singularity {
            enabled = true
            //autoMounts = true
            autoMounts = false
            //engineOptions = "--debug"
            cacheDir = 'singularity-images'
        }
        env {
            TMPDIR = "/g/data/nm31/chris_jackson"
        }
    }

    gadi_scratch {
        process { withName: TRANSLATE_TARGET_FILE {
                cpus = { 2 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: ASSEMBLE_PAIRED_AND_SINGLE_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: ASSEMBLE_PAIRED_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: ASSEMBLE_SINGLE_END {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: VISUALISE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: SUMMARY_STATS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: INTRONERATE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: PARALOGS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries =
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: RETRIEVE_SEQUENCES {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: PARALOG_RETRIEVER {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: COMBINE_LANES_PAIRED_END {
                cpus = { 1 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: COMBINE_LANES_SINGLE_END {
                cpus = { 1 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withName: TRIMMOMATIC_PAIRED {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
            }
            withName: TRIMMOMATIC_SINGLE {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141   ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                queue = 'normal'
                clusterOptions = "-l wd -l storage=gdata/nm31+scratch/nm31 -P nm31 -l jobfs=50GB"
                module = 'singularity'
                scratch = true
            }
            withLabel: in_container {
                container = \
                'file:///g/data/nm31/bin/hybpiper-rbgv_latest.sif'
                }
        }
        executor {
            name = 'pbspro'
        }
        singularity {
            enabled = true
            //autoMounts = true
            autoMounts = false
            //engineOptions = "--debug"
            cacheDir = 'singularity-images'
        }
    }

    slurm {
            process { withName: TRANSLATE_TARGET_FILE {
                cpus = { 2 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: ASSEMBLE_PAIRED_AND_SINGLE_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: ASSEMBLE_PAIRED_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }  
            withName: ASSEMBLE_SINGLE_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }            
            withName: VISUALISE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: SUMMARY_STATS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: INTRONERATE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: PARALOGS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: RETRIEVE_SEQUENCES {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: PARALOG_RETRIEVER {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: COMBINE_LANES_PAIRED_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: COMBINE_LANES_SINGLE_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: TRIMMOMATIC_PAIRED {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: TRIMMOMATIC_SINGLE {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withLabel: in_container {
                container = \
                'library://chrisjackson-pellicle/collection/hybpiper-yang-and-smith-rbgv:hp' 
                }
        }
        executor {
            name = 'slurm'
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = 'singularity-images'
        }
        
    }

    slurm_scratch {
            process { withName: TRANSLATE_TARGET_FILE {
                cpus = { 2 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: ASSEMBLE_PAIRED_AND_SINGLE_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: ASSEMBLE_PAIRED_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }  
            withName: ASSEMBLE_SINGLE_END {
                cpus = { 30 * task.attempt }
                memory = { 30.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }            
            withName: VISUALISE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: SUMMARY_STATS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: INTRONERATE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: PARALOGS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: RETRIEVE_SEQUENCES {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: PARALOG_RETRIEVER {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: COMBINE_LANES_PAIRED_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: COMBINE_LANES_SINGLE_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
            }
            withName: TRIMMOMATIC_PAIRED {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withName: TRIMMOMATIC_SINGLE {
                cpus = { 10 * task.attempt }
                memory = { 10.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
                time = '24h'
                scratch = '$MY_GRID_TMP'
            }
            withLabel: in_container {
                container = \
                'library://chrisjackson-pellicle/collection/hybpiper-yang-and-smith-rbgv:hp' 
                }
        }
        executor {
            name = 'slurm'
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = 'singularity-images'
        }
        
    }

    standard {
            process { 
                
            withName: ASSEMBLE_PAIRED_AND_SINGLE_END {
                cpus = { 2 * task.attempt }
                memory = { 2.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: ASSEMBLE_PAIRED_END {
                cpus = { 2 * task.attempt }
                memory = { 2.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: ASSEMBLE_SINGLE_END {
                cpus = { 2 * task.attempt }
                memory = { 2.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }   
            withName: VISUALISE {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..143 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: SUMMARY_STATS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..143 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: PARALOGS {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: RETRIEVE_SEQUENCES {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: PARALOG_RETRIEVER {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: COMBINE_LANES_PAIRED_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: COMBINE_LANES_SINGLE_END {
                cpus = { 1 * task.attempt }
                memory = { 1.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: TRIMMOMATIC_PAIRED {
                cpus = { 2 * task.attempt }
                memory = { 2.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withName: TRIMMOMATIC_SINGLE {
                cpus = { 2 * task.attempt }
                memory = { 2.GB * task.attempt }
                errorStrategy  = { task.exitStatus in 137..141 ? 'retry' : 'terminate' }
                maxRetries = 3
            }
            withLabel: in_container {
                container = \
                'library://chrisjackson-pellicle/collection/hybpiper-yang-and-smith-rbgv:hp'
            }
        }
        singularity {
            enabled = true
            autoMounts = true
            cacheDir = 'singularity-images'
        } 
    }
}
